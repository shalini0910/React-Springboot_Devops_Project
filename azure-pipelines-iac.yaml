parameters:
  - name: createCluster
    type: boolean
    default: true  # Set default to true; change to false if you don't want to create the cluster
  - name: destroyCluster
    type: boolean
    default: false  # Set default to false; change to true when you want to destroy the cluster.

trigger:
  branches:
    include:
      - main  # Adjust this to your desired branch
      - dev
  paths:
    include:
      - aks-arm-templates-iac.json

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'aks-iac-service-connection' # The Azure service connection name in Azure DevOps
  resourceGroupName: 'RG_AKS_TEMP'  # The resource group where AKS will be deployed
  location: 'northeurope'  # The region for deployment
  clusterName: 'Kubernetes_Cluster_temp'  # Name of your AKS cluster
  templateFile: 'aks-arm-templates-iac.json'  # ARM template file
  # parametersFile: 'aks-arm-parameters.json'  # Optional: if you have a parameters file

stages:
  - stage: DeployAKS
    displayName: 'Deploy AKS Cluster'
    condition: eq('${{ parameters.createCluster }}', 'true')  # Only run this stage if create is true
    jobs:
      - job: Deploy
        displayName: 'Deploy AKS Cluster'
        steps:
          - checkout: self
          
          # Validate the ARM template
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Validate ARM Template'
            inputs:
              azureResourceManagerConnection: $(azureSubscription)
              resourceGroupName: $(resourceGroupName)
              location: $(location)
              csmFile: $(templateFile)
              # csmParametersFile: $(parametersFile)  # If you don't have a parameters file, remove this line
              deploymentMode: ValidationOnly

          # Deploy the ARM template to create/update AKS cluster
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy AKS Cluster ARM Template'
            inputs:
              azureResourceManagerConnection: $(azureSubscription)
              resourceGroupName: $(resourceGroupName)
              location: $(location)
              csmFile: $(templateFile)
              # csmParametersFile: $(parametersFile)  # If you don't have a parameters file, remove this line
              deploymentMode: Incremental

  - stage: DestroyAKS
    displayName: 'Destroy AKS Cluster'
    condition: eq('${{ parameters.destroyCluster }}', 'true')  # Only run this stage if destroyCluster is true
    jobs:
      - job: Cleanup
        displayName: 'Delete Resource Group and AKS Cluster'
        steps:
          - checkout: none

          # This task uses Azure CLI to delete the resource group where the AKS cluster is deployed
          - task: AzureCLI@2
            displayName: 'Delete Resource Group'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Deleting resource group $(resourceGroupName) and all its resources..."
                az group delete --name $(resourceGroupName) --yes --no-wait
