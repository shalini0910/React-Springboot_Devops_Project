# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - dev
      - main
  paths:
    exclude:
      - aks-deploy-from-acr.yaml
      - aks-deploy-from-acr-prod.yaml

name: $(date:yyyyMMdd)$(rev:.r)

resources:
  repositories:
    - repository: self
      type: git

variables:
  # Container registry service connection
  dockerRegistryServiceConnection: 'd6e93b90-3daf-4435-83e9-e2493d41fe87'
  containerRegistry: 'containerregisterydevops.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/react-and-spring-data-rest/Dockerfile'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Dev
  displayName: Build and Push to Dev
  condition: eq(variables['Build.SourceBranchName'], 'dev')
  jobs:
  - job: Build
    displayName: Build and push Docker image for Dev
    pool:
      vmImage: $(vmImageName)
    variables:
      imageRepository: 'shaliniprojectdevops_Dev'
      tag: '$(Build.BuildId)'
    steps:
    - script: |
        pwd
        ls -lrt
        cd react-and-spring-data-rest && mvn test
      displayName: Test
           
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: CopyFiles@2
      inputs:
        Contents: 'aks-deploy-from-acr.yaml'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Main
  displayName: Build and Push to Main
  condition: eq(variables['Build.SourceBranchName'], 'main')
  jobs:
  - job: Build
    displayName: Build and push Docker image for Main
    pool:
      vmImage: $(vmImageName)
    variables:
      imageRepository: 'Main_shaliniprojectdevops'
      tag: '$(Build.BuildId)'
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: CopyFiles@2
      inputs:
        Contents: 'aks-deploy-from-acr-prod.yaml'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'